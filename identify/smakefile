#
# identify.library
#
# Copyright (C) 2010 Richard "Shred" Körber
#   http://identify.shredzone.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License / GNU Lesser
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

PPCP      = ppccpuclock
OBJP      = bin
INCP      = /include
LOCALEP   = /locale/bin

OBJS      = $(OBJP)/Main.o $(OBJP)/Expansion.o $(OBJP)/Alerts.o \
            $(OBJP)/Hardware.o $(OBJP)/Locale.o $(OBJP)/Support.o \
            $(OBJP)/Functions.o $(OBJP)/Clockfreq.o \
            $(OBJP)/ppccpuclock.o $(OBJP)/ppcgetinfo.o \
            $(OBJP)/EndCode.o

OBJS020   = $(OBJP)/Main_020.o $(OBJP)/Expansion_020.o $(OBJP)/Alerts_020.o \
            $(OBJP)/Hardware_020.o $(OBJP)/Locale.o $(OBJP)/Support_020.o \
            $(OBJP)/Functions_020.o $(OBJP)/Clockfreq_020.o \
            $(OBJP)/ppccpuclock.o $(OBJP)/ppcgetinfo.o \
            $(OBJP)/EndCode.o

AOPTS     = ERRORS=0 OPT=NRQLPSBT NOEXE INCPATH=Include:,$(INCP),$(LOCALEP)
GEN020    = SET "_MAKE_68020"
LOPTS     = NODEBUG SMALLCODE SMALLDATA

PPCRYPT   = /ppcrypt/bin/PPCrypt

.PHONY : all install clean

all: $(OBJP) $(OBJP)/identify.library $(OBJP)/identify.library_000

install: all
    copy FROM $(OBJP)/identify.library TO LIBS:identify.library

clean:
    delete ALL QUIET $(OBJP)

$(OBJP):
    makedir $(OBJP)

$(OBJP)/identify.library: $(OBJS020)
    phxlnk $(LOPTS) TO $(OBJP)/identify.library FROM $(OBJS020)
    $(PPCRYPT) $(OBJP)/identify.library e=3

$(OBJP)/identify.library_000: $(OBJS)
    phxlnk $(LOPTS) TO $(OBJP)/identify.library_000 FROM $(OBJS)
    $(PPCRYPT) $(OBJP)/identify.library_000 e=3

#-- 68000 builds --

$(OBJP)/Alerts.o: Alerts.s
    phxass $(AOPTS) FROM Alerts.s TO $(OBJP)/Alerts.o

$(OBJP)/Clockfreq.o: Clockfreq.s
    phxass $(AOPTS) FROM Clockfreq.s TO $(OBJP)/Clockfreq.o

$(OBJP)/EndCode.o: EndCode.s
    phxass $(AOPTS) FROM EndCode.s TO $(OBJP)/EndCode.o

$(OBJP)/Expansion.o: Expansion.s
    phxass $(AOPTS) FROM Expansion.s TO $(OBJP)/Expansion.o

$(OBJP)/Functions.o: Functions.s
    phxass $(AOPTS) FROM Functions.s TO $(OBJP)/Functions.o

$(OBJP)/Hardware.o: Hardware.s
    phxass $(AOPTS) FROM Hardware.s TO $(OBJP)/Hardware.o

$(OBJP)/Locale.o: Locale.s
    phxass $(AOPTS) FROM Locale.s TO $(OBJP)/Locale.o

$(OBJP)/Main.o: Main.s
    phxass $(AOPTS) FROM Main.s TO $(OBJP)/Main.o

$(OBJP)/Support.o: Support.s
    phxass $(AOPTS) FROM Support.s TO $(OBJP)/Support.o

#-- 68020 builds --

$(OBJP)/Alerts_020.o: Alerts.s
    phxass $(AOPTS) $(GEN020) FROM Alerts.s TO $(OBJP)/Alerts_020.o

$(OBJP)/Clockfreq_020.o: Clockfreq.s
    phxass $(AOPTS) $(GEN020) FROM Clockfreq.s TO $(OBJP)/Clockfreq_020.o

$(OBJP)/Expansion_020.o: Expansion.s
    phxass $(AOPTS) $(GEN020) FROM Expansion.s TO $(OBJP)/Expansion_020.o

$(OBJP)/Functions_020.o: Functions.s
    phxass $(AOPTS) $(GEN020) FROM Functions.s TO $(OBJP)/Functions_020.o

$(OBJP)/Hardware_020.o: Hardware.s
    phxass $(AOPTS) $(GEN020) FROM Hardware.s TO $(OBJP)/Hardware_020.o

$(OBJP)/Main_020.o: Main.s
    phxass $(AOPTS) $(GEN020) FROM Main.s TO $(OBJP)/Main_020.o

$(OBJP)/Support_020.o: Support.s
    phxass $(AOPTS) $(GEN020) FROM Support.s TO $(OBJP)/Support_020.o

#-- Contributions --
$(OBJP)/ppcgetinfo.o: $(PPCP)/ppcgetinfo.o
    copy FROM $(PPCP)/ppcgetinfo.o TO $(OBJP)/ppcgetinfo.o

$(OBJP)/ppccpuclock.o: $(PPCP)/ppccpuclock.o
    copy FROM $(PPCP)/ppccpuclock.o TO $(OBJP)/ppccpuclock.o

#
